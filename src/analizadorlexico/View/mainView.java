/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package analizadorlexico.View;

//import analizadorlexico.Controller.AnalizadorLexico;
//import analizadorlexico.Controller.UtilFile;
//import analizadorlexico.Model.AFD;
//import analizadorlexico.Model.AFN;
//import analizadorlexico.Model.CaracteresEspeciales;
//import analizadorlexico.Model.SimboloGramatica;
//import analizadorlexico.Model.Estado;
//import analizadorlexico.Model.ExpresionRegularToAFN;
//import analizadorlexico.Model.Gramatica;
//import analizadorlexico.Model.LL1;
import analizadorlexico.Controller.UtilFile;
import analizadorlexico.Models.AFD.AFD;
import analizadorlexico.Models.AFN.AFN;
import static analizadorlexico.Models.AFN.AFN.conjuntoAFNsUnionLexico;
import analizadorlexico.Models.AFN.Estado;
import analizadorlexico.Models.Gramatica.Gramatica;
import analizadorlexico.Models.Gramatica.SimboloGramatica;
import analizadorlexico.Models.analizador.lexico.AnalizadorLexico;
import analizadorlexico.Models.analizador.lexico.AnalizadorLexicoDTO;
import analizadorlexico.Models.analizador.sintactico.ExpresionRegularToAFN;
import analizadorlexico.Models.analizador.sintactico.LL1.CeldaTabla;
import analizadorlexico.Models.analizador.sintactico.LL1.LL1;
import com.google.common.collect.Table;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.javatuples.Triplet;

/**
 *
 * @author Israel Morales
 */
public class mainView extends javax.swing.JFrame {

    /**
     * Creates new form mainView
     */
    Dimension dimension;
    LL1 resultll1;
    Gramatica gramaticall1;
    public mainView() {
        initComponents();
        int x, y;
        int WIDTH, HEIGHT;
        dimension = Toolkit.getDefaultToolkit().getScreenSize();
        WIDTH = (int) (dimension.getWidth() * 0.75);
        HEIGHT = (int) (dimension.getHeight() * 0.75);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        setBounds(x, y, WIDTH, HEIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FrameAFNBasico = new javax.swing.JFrame();
        PanelAFNBasico = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextCaracterInferior = new javax.swing.JTextField();
        TextCaracterSuperior = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextIDAFN = new javax.swing.JTextField();
        ButtonCrearAFN = new javax.swing.JButton();
        FrameAFNConcatenar = new javax.swing.JFrame();
        PanelAFNConcatenar = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ComboBoxConcatenar1 = new javax.swing.JComboBox<>();
        ComboBoxConcatenar2 = new javax.swing.JComboBox<>();
        ButtonConcatenarAFN = new javax.swing.JButton();
        FrameAFNCerraduraTransitiva = new javax.swing.JFrame();
        PanelAFNCerraduraTransitiva = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ComboBoxCerraduraTransitiva = new javax.swing.JComboBox<>();
        ButtonCerraduraTransitivaAFN = new javax.swing.JButton();
        FrameAFNCerraduraKleen = new javax.swing.JFrame();
        PanelAFNCerraduraKleen = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxCerraduraKleen = new javax.swing.JComboBox<>();
        ButtonCerraduraKleenAFN = new javax.swing.JButton();
        FrameAFNUnion = new javax.swing.JFrame();
        PanelAFNUnion = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ComboBoxUnion1 = new javax.swing.JComboBox<>();
        ComboBoxUnion2 = new javax.swing.JComboBox<>();
        ButtonUnirAFN = new javax.swing.JButton();
        FrameAFNUnionLexico = new javax.swing.JFrame();
        PanelAFNUnionLexico = new javax.swing.JPanel();
        ScrollPaneUnionLexico = new javax.swing.JScrollPane();
        TableUnionLexico = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        ButtonUnionEspecial = new javax.swing.JButton();
        TextIdAFNUnionLexico = new javax.swing.JTextField();
        FrameConvertirAFNaAFD = new javax.swing.JFrame();
        PanelConvertirAFNaAFD = new javax.swing.JPanel();
        ScrollPaneConvertirAFNaAFD = new javax.swing.JScrollPane();
        TableConvertirAFNaAFD = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        TextIdAFNaAFD = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        ComboBoxAFNaAFD = new javax.swing.JComboBox<>();
        ButtonConvertirAFNaAFD = new javax.swing.JButton();
        ButtonConvertirAFNaAFDSalir = new javax.swing.JButton();
        ButtonGuardarTablaArchivo = new javax.swing.JButton();
        FrameSaveTable = new javax.swing.JFrame();
        PanelSaveTable = new javax.swing.JPanel();
        FileChooserSaveTable = new javax.swing.JFileChooser();
        FrameAFNOpcional = new javax.swing.JFrame();
        PanelAFNOpcional = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        ComboBoxOpcional = new javax.swing.JComboBox<>();
        ButtonOpcional = new javax.swing.JButton();
        FrameOpenTable = new javax.swing.JFrame();
        PanelOpenTable = new javax.swing.JPanel();
        FileChooserOpenTable = new javax.swing.JFileChooser();
        FrameProbadorLexico = new javax.swing.JFrame();
        PanelProbadorLexico = new javax.swing.JPanel();
        ScrollPaneProbadorLexicoTabla = new javax.swing.JScrollPane();
        TableProbadorLexico = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        ComboBoxProbadorLexicoMemoria = new javax.swing.JComboBox<>();
        ButtonProbadorLexicoSelecionar = new javax.swing.JButton();
        ButtonProbadorLexicoSalir = new javax.swing.JButton();
        ButtonProbadorLexicoAbrirArchivo = new javax.swing.JButton();
        ScrollPaneProbadorLexicoText = new javax.swing.JScrollPane();
        TextAreaProbadorLexico = new javax.swing.JTextArea();
        ButtonProbadorLexicoAnalizar = new javax.swing.JButton();
        FrameEvaluadorExpresiones = new javax.swing.JFrame();
        PanelProbadorLexico1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        ComboBoxProbadorLexicoMemoria1 = new javax.swing.JComboBox<>();
        ButtonProbadorLexicoSelecionar1 = new javax.swing.JButton();
        ButtonProbadorLexicoSalir1 = new javax.swing.JButton();
        ButtonProbadorLexicoAbrirArchivo1 = new javax.swing.JButton();
        ScrollPaneProbadorLexicoText1 = new javax.swing.JScrollPane();
        TextAreaProbadorLexico1 = new javax.swing.JTextArea();
        ButtonProbadorLexicoAnalizar1 = new javax.swing.JButton();
        ScrollPaneProbadorLexicoText2 = new javax.swing.JScrollPane();
        TextAreaProbadorLexico3 = new javax.swing.JTextArea();
        ScrollPaneProbadorLexicoText3 = new javax.swing.JScrollPane();
        TextAreaProbadorLexico2 = new javax.swing.JTextArea();
        FrameProbadorLL1 = new javax.swing.JFrame();
        PanelProbadorLL1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaGramaticaLL1 = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        ComboBoxProbadorLL1Memoria = new javax.swing.JComboBox<>();
        ScrollPaneTableLexicoLL1 = new javax.swing.JScrollPane();
        TableLexicoLL1 = new javax.swing.JTable();
        ButtonProbarLexicoEnLL1 = new javax.swing.JButton();
        ScrollPaneRegistroLL1 = new javax.swing.JScrollPane();
        TableRegistroLL1 = new javax.swing.JTable();
        ScrollPaneTableLexicoLLNoterminales = new javax.swing.JScrollPane();
        TableLexicoLLNoterminales = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        ScrollPaneTableLexicoLLterminales = new javax.swing.JScrollPane();
        TableLexicoLLterminales = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextAreaAsigmaLL1 = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        ScrollPaneProbadorLexicoLL1 = new javax.swing.JScrollPane();
        TableProbadorLexicoLL1 = new javax.swing.JTable();
        ButtonLL1AsignarTokens = new javax.swing.JButton();
        ButtonCrearTablaLL2 = new javax.swing.JButton();
        ButtonAnalizarCadenaLL2 = new javax.swing.JButton();
        FrameEFAFN = new javax.swing.JFrame();
        PanelERAFN = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        TextIdERAFN = new javax.swing.JTextField();
        ButtonCrearERAFN = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        ComboBoxERAFN = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaErAFN = new javax.swing.JTextArea();
        FrameProbadorLR0 = new javax.swing.JFrame();
        PanelProbadorLR0 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TextAreaGramaticaLL2 = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        ComboBoxProbadorLL1Memoria1 = new javax.swing.JComboBox<>();
        ScrollPaneTableLexicoLL2 = new javax.swing.JScrollPane();
        TableLexicoLL2 = new javax.swing.JTable();
        ButtonProbarLexicoEnLL2 = new javax.swing.JButton();
        ScrollPaneRegistroLL2 = new javax.swing.JScrollPane();
        TableRegistroLL2 = new javax.swing.JTable();
        ScrollPaneTableLexicoLLNoterminales1 = new javax.swing.JScrollPane();
        TableLexicoLLNoterminales1 = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        ScrollPaneTableLexicoLLterminales1 = new javax.swing.JScrollPane();
        TableLexicoLLterminales1 = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TextAreaAsigmaLL2 = new javax.swing.JTextArea();
        jLabel30 = new javax.swing.JLabel();
        ScrollPaneProbadorLexicoLL2 = new javax.swing.JScrollPane();
        TableProbadorLexicoLL2 = new javax.swing.JTable();
        ButtonCrearTablaLL3 = new javax.swing.JButton();
        ButtonCrearTablaLL4 = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        MenuAFN = new javax.swing.JMenu();
        MenuAFNBasico = new javax.swing.JMenuItem();
        MenuUnirAFNS = new javax.swing.JMenuItem();
        MenuConcatenarAFN = new javax.swing.JMenuItem();
        MenuCerraduraTransitivaAFN = new javax.swing.JMenuItem();
        MenuCerraduraKleen = new javax.swing.JMenuItem();
        MenuOperacionOptional = new javax.swing.JMenuItem();
        MenuERaAFN = new javax.swing.JMenuItem();
        MenuUnionLexico = new javax.swing.JMenuItem();
        MenuAFNaAFD = new javax.swing.JMenuItem();
        MenuAnalizarCadena = new javax.swing.JMenuItem();
        MenuProbadorAnalizadorLexico = new javax.swing.JMenuItem();
        MenuSintactico = new javax.swing.JMenu();
        jMenuDescensoRecursivo = new javax.swing.JMenu();
        MenuItemCalculadora = new javax.swing.JMenuItem();
        MenuDescRecGramaticaGramatica = new javax.swing.JMenuItem();
        MenuAnalisisLL1 = new javax.swing.JMenuItem();
        AnalizadorLR0 = new javax.swing.JMenuItem();

        FrameAFNBasico.setTitle("Creacion de AFN Basico");
        FrameAFNBasico.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNBasicoWindowClosing(evt);
            }
        });

        jLabel1.setText("Caracter Inferior: ");
        jLabel1.setInheritsPopupMenu(false);

        jLabel2.setText("Caracter Superior: ");

        TextCaracterInferior.setColumns(1);
        TextCaracterInferior.setToolTipText("");
        TextCaracterInferior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextCaracterInferiorKeyTyped(evt);
            }
        });

        TextCaracterSuperior.setColumns(1);
        TextCaracterSuperior.setToolTipText("");
        TextCaracterSuperior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextCaracterSuperiorKeyTyped(evt);
            }
        });

        jLabel3.setText("Id AFN");

        TextIDAFN.setColumns(1);
        TextIDAFN.setToolTipText("");
        TextIDAFN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextIDAFNKeyTyped(evt);
            }
        });

        ButtonCrearAFN.setText("Crear AFN");
        ButtonCrearAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCrearAFNMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNBasicoLayout = new javax.swing.GroupLayout(PanelAFNBasico);
        PanelAFNBasico.setLayout(PanelAFNBasicoLayout);
        PanelAFNBasicoLayout.setHorizontalGroup(
            PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNBasicoLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelAFNBasicoLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(42, 42, 42)))
                .addGap(18, 18, 18)
                .addGroup(PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonCrearAFN, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(TextCaracterInferior)
                    .addComponent(TextCaracterSuperior)
                    .addComponent(TextIDAFN))
                .addGap(122, 122, 122))
        );
        PanelAFNBasicoLayout.setVerticalGroup(
            PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNBasicoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextCaracterInferior))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextCaracterSuperior))
                .addGap(55, 55, 55)
                .addGroup(PanelAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextIDAFN))
                .addGap(57, 57, 57)
                .addComponent(ButtonCrearAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout FrameAFNBasicoLayout = new javax.swing.GroupLayout(FrameAFNBasico.getContentPane());
        FrameAFNBasico.getContentPane().setLayout(FrameAFNBasicoLayout);
        FrameAFNBasicoLayout.setHorizontalGroup(
            FrameAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNBasicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNBasico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNBasicoLayout.setVerticalGroup(
            FrameAFNBasicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNBasicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNBasico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNConcatenar.setTitle("Concatenacion de AFNS");
        FrameAFNConcatenar.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNConcatenarWindowClosing(evt);
            }
        });

        jLabel4.setText("Concatenar AFN: ");
        jLabel4.setInheritsPopupMenu(false);

        jLabel5.setText("Con AFN:");

        ComboBoxConcatenar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxConcatenar1MousePressed(evt);
            }
        });

        ComboBoxConcatenar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxConcatenar2MousePressed(evt);
            }
        });

        ButtonConcatenarAFN.setText("Concatenar AFN'S");
        ButtonConcatenarAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonConcatenarAFNMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNConcatenarLayout = new javax.swing.GroupLayout(PanelAFNConcatenar);
        PanelAFNConcatenar.setLayout(PanelAFNConcatenarLayout);
        PanelAFNConcatenarLayout.setHorizontalGroup(
            PanelAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNConcatenarLayout.createSequentialGroup()
                .addGroup(PanelAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelAFNConcatenarLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonConcatenarAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAFNConcatenarLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxConcatenar1, 0, 80, Short.MAX_VALUE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxConcatenar2, 0, 80, Short.MAX_VALUE)
                .addGap(81, 81, 81))
        );
        PanelAFNConcatenarLayout.setVerticalGroup(
            PanelAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNConcatenarLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(PanelAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxConcatenar1)
                    .addComponent(ComboBoxConcatenar2))
                .addGap(52, 52, 52)
                .addComponent(ButtonConcatenarAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        javax.swing.GroupLayout FrameAFNConcatenarLayout = new javax.swing.GroupLayout(FrameAFNConcatenar.getContentPane());
        FrameAFNConcatenar.getContentPane().setLayout(FrameAFNConcatenarLayout);
        FrameAFNConcatenarLayout.setHorizontalGroup(
            FrameAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNConcatenarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNConcatenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNConcatenarLayout.setVerticalGroup(
            FrameAFNConcatenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNConcatenarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNConcatenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNCerraduraTransitiva.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FrameAFNCerraduraTransitiva.setTitle("Cerradura Transitiva");
        FrameAFNCerraduraTransitiva.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNCerraduraTransitivaWindowClosing(evt);
            }
        });

        jLabel6.setText("Aplicar cerradura transitiva a: ");
        jLabel6.setInheritsPopupMenu(false);

        ComboBoxCerraduraTransitiva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxCerraduraTransitivaMousePressed(evt);
            }
        });

        ButtonCerraduraTransitivaAFN.setText("Relizar operacion +");
        ButtonCerraduraTransitivaAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCerraduraTransitivaAFNMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNCerraduraTransitivaLayout = new javax.swing.GroupLayout(PanelAFNCerraduraTransitiva);
        PanelAFNCerraduraTransitiva.setLayout(PanelAFNCerraduraTransitivaLayout);
        PanelAFNCerraduraTransitivaLayout.setHorizontalGroup(
            PanelAFNCerraduraTransitivaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNCerraduraTransitivaLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel6)
                .addGap(40, 40, 40)
                .addComponent(ComboBoxCerraduraTransitiva, 0, 80, Short.MAX_VALUE)
                .addGap(141, 141, 141))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNCerraduraTransitivaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonCerraduraTransitivaAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        PanelAFNCerraduraTransitivaLayout.setVerticalGroup(
            PanelAFNCerraduraTransitivaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNCerraduraTransitivaLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(PanelAFNCerraduraTransitivaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxCerraduraTransitiva))
                .addGap(49, 49, 49)
                .addComponent(ButtonCerraduraTransitivaAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        javax.swing.GroupLayout FrameAFNCerraduraTransitivaLayout = new javax.swing.GroupLayout(FrameAFNCerraduraTransitiva.getContentPane());
        FrameAFNCerraduraTransitiva.getContentPane().setLayout(FrameAFNCerraduraTransitivaLayout);
        FrameAFNCerraduraTransitivaLayout.setHorizontalGroup(
            FrameAFNCerraduraTransitivaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNCerraduraTransitivaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNCerraduraTransitiva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNCerraduraTransitivaLayout.setVerticalGroup(
            FrameAFNCerraduraTransitivaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNCerraduraTransitivaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNCerraduraTransitiva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNCerraduraKleen.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FrameAFNCerraduraKleen.setTitle("Cerradura de kleen");
        FrameAFNCerraduraKleen.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNCerraduraKleenWindowClosing(evt);
            }
        });

        jLabel7.setText("Aplicar cerradura kleen a: ");
        jLabel7.setInheritsPopupMenu(false);

        ComboBoxCerraduraKleen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxCerraduraKleenMousePressed(evt);
            }
        });

        ButtonCerraduraKleenAFN.setText("Realizar Operacion *");
        ButtonCerraduraKleenAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCerraduraKleenAFNMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNCerraduraKleenLayout = new javax.swing.GroupLayout(PanelAFNCerraduraKleen);
        PanelAFNCerraduraKleen.setLayout(PanelAFNCerraduraKleenLayout);
        PanelAFNCerraduraKleenLayout.setHorizontalGroup(
            PanelAFNCerraduraKleenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNCerraduraKleenLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addComponent(ComboBoxCerraduraKleen, 0, 100, Short.MAX_VALUE)
                .addGap(154, 154, 154))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNCerraduraKleenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonCerraduraKleenAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        PanelAFNCerraduraKleenLayout.setVerticalGroup(
            PanelAFNCerraduraKleenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNCerraduraKleenLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(PanelAFNCerraduraKleenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxCerraduraKleen))
                .addGap(49, 49, 49)
                .addComponent(ButtonCerraduraKleenAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        javax.swing.GroupLayout FrameAFNCerraduraKleenLayout = new javax.swing.GroupLayout(FrameAFNCerraduraKleen.getContentPane());
        FrameAFNCerraduraKleen.getContentPane().setLayout(FrameAFNCerraduraKleenLayout);
        FrameAFNCerraduraKleenLayout.setHorizontalGroup(
            FrameAFNCerraduraKleenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNCerraduraKleenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNCerraduraKleen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNCerraduraKleenLayout.setVerticalGroup(
            FrameAFNCerraduraKleenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNCerraduraKleenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNCerraduraKleen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNUnion.setTitle("Union de AFNS");
        FrameAFNUnion.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNUnionWindowClosing(evt);
            }
        });

        jLabel8.setText("Unir AFN: ");
        jLabel8.setInheritsPopupMenu(false);

        jLabel9.setText("Con AFN:");

        ComboBoxUnion1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxUnion1MousePressed(evt);
            }
        });

        ComboBoxUnion2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxUnion2MousePressed(evt);
            }
        });

        ButtonUnirAFN.setText("Union de  AFN'S");
        ButtonUnirAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonUnirAFNMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNUnionLayout = new javax.swing.GroupLayout(PanelAFNUnion);
        PanelAFNUnion.setLayout(PanelAFNUnionLayout);
        PanelAFNUnionLayout.setHorizontalGroup(
            PanelAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNUnionLayout.createSequentialGroup()
                .addGroup(PanelAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelAFNUnionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonUnirAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAFNUnionLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxUnion1, 0, 80, Short.MAX_VALUE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxUnion2, 0, 80, Short.MAX_VALUE)
                .addGap(81, 81, 81))
        );
        PanelAFNUnionLayout.setVerticalGroup(
            PanelAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNUnionLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(PanelAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxUnion1)
                    .addComponent(ComboBoxUnion2))
                .addGap(52, 52, 52)
                .addComponent(ButtonUnirAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        javax.swing.GroupLayout FrameAFNUnionLayout = new javax.swing.GroupLayout(FrameAFNUnion.getContentPane());
        FrameAFNUnion.getContentPane().setLayout(FrameAFNUnionLayout);
        FrameAFNUnionLayout.setHorizontalGroup(
            FrameAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNUnionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNUnion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNUnionLayout.setVerticalGroup(
            FrameAFNUnionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNUnionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNUnion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNUnionLexico.setTitle("Union Lexico de AFNS");
        FrameAFNUnionLexico.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNUnionLexicoWindowClosing(evt);
            }
        });

        ScrollPaneUnionLexico.setViewportView(TableUnionLexico);

        jLabel10.setText("Id AFN resultante:");

        ButtonUnionEspecial.setText("Realizar Accion");
        ButtonUnionEspecial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonUnionEspecialMousePressed(evt);
            }
        });

        TextIdAFNUnionLexico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextIdAFNUnionLexicoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNUnionLexicoLayout = new javax.swing.GroupLayout(PanelAFNUnionLexico);
        PanelAFNUnionLexico.setLayout(PanelAFNUnionLexicoLayout);
        PanelAFNUnionLexicoLayout.setHorizontalGroup(
            PanelAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNUnionLexicoLayout.createSequentialGroup()
                .addGroup(PanelAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelAFNUnionLexicoLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TextIdAFNUnionLexico, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonUnionEspecial, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelAFNUnionLexicoLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(ScrollPaneUnionLexico)))
                .addGap(57, 57, 57))
        );
        PanelAFNUnionLexicoLayout.setVerticalGroup(
            PanelAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNUnionLexicoLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(PanelAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TextIdAFNUnionLexico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonUnionEspecial, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneUnionLexico, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout FrameAFNUnionLexicoLayout = new javax.swing.GroupLayout(FrameAFNUnionLexico.getContentPane());
        FrameAFNUnionLexico.getContentPane().setLayout(FrameAFNUnionLexicoLayout);
        FrameAFNUnionLexicoLayout.setHorizontalGroup(
            FrameAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNUnionLexicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNUnionLexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNUnionLexicoLayout.setVerticalGroup(
            FrameAFNUnionLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNUnionLexicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNUnionLexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameConvertirAFNaAFD.setTitle("Convertir AFNs a AFDs");
        FrameConvertirAFNaAFD.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameConvertirAFNaAFDWindowClosing(evt);
            }
        });

        ScrollPaneConvertirAFNaAFD.setToolTipText("");
        ScrollPaneConvertirAFNaAFD.setViewportView(TableConvertirAFNaAFD);

        jLabel11.setText("Id AFD resultante:");

        TextIdAFNaAFD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextIdAFNaAFDKeyTyped(evt);
            }
        });

        jLabel12.setText("AFN a convertir a AFD:");

        ComboBoxAFNaAFD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxAFNaAFDMousePressed(evt);
            }
        });

        ButtonConvertirAFNaAFD.setText("Realizar Conversion");
        ButtonConvertirAFNaAFD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonConvertirAFNaAFDMousePressed(evt);
            }
        });

        ButtonConvertirAFNaAFDSalir.setText("Salir");
        ButtonConvertirAFNaAFDSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonConvertirAFNaAFDSalirMousePressed(evt);
            }
        });

        ButtonGuardarTablaArchivo.setText("Guardar Tabla en Archivo");
        ButtonGuardarTablaArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonGuardarTablaArchivoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelConvertirAFNaAFDLayout = new javax.swing.GroupLayout(PanelConvertirAFNaAFD);
        PanelConvertirAFNaAFD.setLayout(PanelConvertirAFNaAFDLayout);
        PanelConvertirAFNaAFDLayout.setHorizontalGroup(
            PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneConvertirAFNaAFD, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelConvertirAFNaAFDLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)))
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextIdAFNaAFD, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(ComboBoxAFNaAFD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonGuardarTablaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonConvertirAFNaAFDSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonConvertirAFNaAFD))))
                .addGap(57, 57, 57))
        );
        PanelConvertirAFNaAFDLayout.setVerticalGroup(
            PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextIdAFNaAFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelConvertirAFNaAFDLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ButtonConvertirAFNaAFD, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxAFNaAFD))
                        .addGap(45, 45, 45))
                    .addGroup(PanelConvertirAFNaAFDLayout.createSequentialGroup()
                        .addGroup(PanelConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonConvertirAFNaAFDSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonGuardarTablaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(ScrollPaneConvertirAFNaAFD, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout FrameConvertirAFNaAFDLayout = new javax.swing.GroupLayout(FrameConvertirAFNaAFD.getContentPane());
        FrameConvertirAFNaAFD.getContentPane().setLayout(FrameConvertirAFNaAFDLayout);
        FrameConvertirAFNaAFDLayout.setHorizontalGroup(
            FrameConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameConvertirAFNaAFDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelConvertirAFNaAFD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameConvertirAFNaAFDLayout.setVerticalGroup(
            FrameConvertirAFNaAFDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameConvertirAFNaAFDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelConvertirAFNaAFD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameSaveTable.setTitle("Union Lexico de AFNS");
        FrameSaveTable.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameSaveTableWindowClosing(evt);
            }
        });

        FileChooserSaveTable.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        FileChooserSaveTable.setFocusCycleRoot(true);

        javax.swing.GroupLayout PanelSaveTableLayout = new javax.swing.GroupLayout(PanelSaveTable);
        PanelSaveTable.setLayout(PanelSaveTableLayout);
        PanelSaveTableLayout.setHorizontalGroup(
            PanelSaveTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSaveTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FileChooserSaveTable, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelSaveTableLayout.setVerticalGroup(
            PanelSaveTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSaveTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FileChooserSaveTable, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FrameSaveTableLayout = new javax.swing.GroupLayout(FrameSaveTable.getContentPane());
        FrameSaveTable.getContentPane().setLayout(FrameSaveTableLayout);
        FrameSaveTableLayout.setHorizontalGroup(
            FrameSaveTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameSaveTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelSaveTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameSaveTableLayout.setVerticalGroup(
            FrameSaveTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameSaveTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelSaveTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameAFNOpcional.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FrameAFNOpcional.setTitle("Cerradura de Optional");
        FrameAFNOpcional.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameAFNOpcionalWindowClosing(evt);
            }
        });

        jLabel13.setText("Aplicar opcional a: ");
        jLabel13.setInheritsPopupMenu(false);

        ComboBoxOpcional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxOpcionalMousePressed(evt);
            }
        });

        ButtonOpcional.setText("Realizar Operacion ?");
        ButtonOpcional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonOpcionalMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelAFNOpcionalLayout = new javax.swing.GroupLayout(PanelAFNOpcional);
        PanelAFNOpcional.setLayout(PanelAFNOpcionalLayout);
        PanelAFNOpcionalLayout.setHorizontalGroup(
            PanelAFNOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAFNOpcionalLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel13)
                .addGap(27, 27, 27)
                .addComponent(ComboBoxOpcional, 0, 136, Short.MAX_VALUE)
                .addGap(154, 154, 154))
            .addGroup(PanelAFNOpcionalLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(ButtonOpcional, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelAFNOpcionalLayout.setVerticalGroup(
            PanelAFNOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAFNOpcionalLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(PanelAFNOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxOpcional))
                .addGap(43, 43, 43)
                .addComponent(ButtonOpcional, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        javax.swing.GroupLayout FrameAFNOpcionalLayout = new javax.swing.GroupLayout(FrameAFNOpcional.getContentPane());
        FrameAFNOpcional.getContentPane().setLayout(FrameAFNOpcionalLayout);
        FrameAFNOpcionalLayout.setHorizontalGroup(
            FrameAFNOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNOpcionalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNOpcional, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameAFNOpcionalLayout.setVerticalGroup(
            FrameAFNOpcionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAFNOpcionalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelAFNOpcional, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameOpenTable.setTitle("Open Table Analizador Lexico");
        FrameOpenTable.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameOpenTableWindowClosing(evt);
            }
        });

        FileChooserOpenTable.setFocusCycleRoot(true);

        javax.swing.GroupLayout PanelOpenTableLayout = new javax.swing.GroupLayout(PanelOpenTable);
        PanelOpenTable.setLayout(PanelOpenTableLayout);
        PanelOpenTableLayout.setHorizontalGroup(
            PanelOpenTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOpenTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FileChooserOpenTable, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelOpenTableLayout.setVerticalGroup(
            PanelOpenTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelOpenTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FileChooserOpenTable, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FrameOpenTableLayout = new javax.swing.GroupLayout(FrameOpenTable.getContentPane());
        FrameOpenTable.getContentPane().setLayout(FrameOpenTableLayout);
        FrameOpenTableLayout.setHorizontalGroup(
            FrameOpenTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameOpenTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelOpenTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameOpenTableLayout.setVerticalGroup(
            FrameOpenTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameOpenTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelOpenTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameProbadorLexico.setTitle("Probar Analizador Lexico");
        FrameProbadorLexico.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameProbadorLexicoWindowClosing(evt);
            }
        });

        ScrollPaneProbadorLexicoTabla.setToolTipText("");
        ScrollPaneProbadorLexicoTabla.setViewportView(TableProbadorLexico);

        jLabel17.setText("AFD en memoria:");

        ComboBoxProbadorLexicoMemoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxProbadorLexicoMemoriaMousePressed(evt);
            }
        });

        ButtonProbadorLexicoSelecionar.setText("Utilizar AFD seleccionado");
        ButtonProbadorLexicoSelecionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoSelecionarMousePressed(evt);
            }
        });

        ButtonProbadorLexicoSalir.setText("Salir");
        ButtonProbadorLexicoSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoSalirMousePressed(evt);
            }
        });

        ButtonProbadorLexicoAbrirArchivo.setText("Abri archivo AFD");
        ButtonProbadorLexicoAbrirArchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoAbrirArchivoMousePressed(evt);
            }
        });

        ScrollPaneProbadorLexicoText.setToolTipText("");

        TextAreaProbadorLexico.setColumns(20);
        TextAreaProbadorLexico.setRows(5);
        ScrollPaneProbadorLexicoText.setViewportView(TextAreaProbadorLexico);

        ButtonProbadorLexicoAnalizar.setText("Analizar Cadena");
        ButtonProbadorLexicoAnalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoAnalizarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelProbadorLexicoLayout = new javax.swing.GroupLayout(PanelProbadorLexico);
        PanelProbadorLexico.setLayout(PanelProbadorLexicoLayout);
        PanelProbadorLexicoLayout.setHorizontalGroup(
            PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                        .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(ComboBoxProbadorLexicoMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonProbadorLexicoSelecionar))
                            .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                                .addComponent(ButtonProbadorLexicoAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonProbadorLexicoAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonProbadorLexicoSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(80, 80, 80))
                    .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                        .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ScrollPaneProbadorLexicoText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ScrollPaneProbadorLexicoTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE))
                        .addGap(57, 57, 57))))
        );
        PanelProbadorLexicoLayout.setVerticalGroup(
            PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLexicoLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonProbadorLexicoSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ComboBoxProbadorLexicoMemoria)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonProbadorLexicoSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonProbadorLexicoAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonProbadorLexicoAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollPaneProbadorLexicoText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(ScrollPaneProbadorLexicoTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout FrameProbadorLexicoLayout = new javax.swing.GroupLayout(FrameProbadorLexico.getContentPane());
        FrameProbadorLexico.getContentPane().setLayout(FrameProbadorLexicoLayout);
        FrameProbadorLexicoLayout.setHorizontalGroup(
            FrameProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLexicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameProbadorLexicoLayout.setVerticalGroup(
            FrameProbadorLexicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLexicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLexico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameEvaluadorExpresiones.setTitle("Evaluador de expresiones");
        FrameEvaluadorExpresiones.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameEvaluadorExpresionesWindowClosing(evt);
            }
        });

        jLabel18.setText("AFD en memoria:");

        ComboBoxProbadorLexicoMemoria1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxProbadorLexicoMemoria1MousePressed(evt);
            }
        });

        ButtonProbadorLexicoSelecionar1.setText("Utilizar AFD seleccionado");
        ButtonProbadorLexicoSelecionar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoSelecionar1MousePressed(evt);
            }
        });

        ButtonProbadorLexicoSalir1.setText("Salir");
        ButtonProbadorLexicoSalir1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoSalir1MousePressed(evt);
            }
        });

        ButtonProbadorLexicoAbrirArchivo1.setText("Abri archivo AFD");
        ButtonProbadorLexicoAbrirArchivo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoAbrirArchivo1MousePressed(evt);
            }
        });

        ScrollPaneProbadorLexicoText1.setToolTipText("");

        TextAreaProbadorLexico1.setColumns(20);
        TextAreaProbadorLexico1.setRows(5);
        ScrollPaneProbadorLexicoText1.setViewportView(TextAreaProbadorLexico1);

        ButtonProbadorLexicoAnalizar1.setText("Analizar Cadena");
        ButtonProbadorLexicoAnalizar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbadorLexicoAnalizar1MousePressed(evt);
            }
        });

        ScrollPaneProbadorLexicoText2.setToolTipText("");

        TextAreaProbadorLexico3.setColumns(20);
        TextAreaProbadorLexico3.setRows(5);
        ScrollPaneProbadorLexicoText2.setViewportView(TextAreaProbadorLexico3);

        ScrollPaneProbadorLexicoText3.setToolTipText("");

        TextAreaProbadorLexico2.setColumns(20);
        TextAreaProbadorLexico2.setRows(5);
        ScrollPaneProbadorLexicoText3.setViewportView(TextAreaProbadorLexico2);

        javax.swing.GroupLayout PanelProbadorLexico1Layout = new javax.swing.GroupLayout(PanelProbadorLexico1);
        PanelProbadorLexico1.setLayout(PanelProbadorLexico1Layout);
        PanelProbadorLexico1Layout.setHorizontalGroup(
            PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelProbadorLexico1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ScrollPaneProbadorLexicoText1)
                    .addComponent(ScrollPaneProbadorLexicoText2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLexico1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(ComboBoxProbadorLexicoMemoria1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonProbadorLexicoSelecionar1))
                    .addGroup(PanelProbadorLexico1Layout.createSequentialGroup()
                        .addComponent(ButtonProbadorLexicoAbrirArchivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(ButtonProbadorLexicoAnalizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonProbadorLexicoSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ScrollPaneProbadorLexicoText3))
                .addGap(80, 80, 80))
        );
        PanelProbadorLexico1Layout.setVerticalGroup(
            PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLexico1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonProbadorLexicoSelecionar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ComboBoxProbadorLexicoMemoria1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLexico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonProbadorLexicoSalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonProbadorLexicoAbrirArchivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonProbadorLexicoAnalizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneProbadorLexicoText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneProbadorLexicoText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneProbadorLexicoText3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout FrameEvaluadorExpresionesLayout = new javax.swing.GroupLayout(FrameEvaluadorExpresiones.getContentPane());
        FrameEvaluadorExpresiones.getContentPane().setLayout(FrameEvaluadorExpresionesLayout);
        FrameEvaluadorExpresionesLayout.setHorizontalGroup(
            FrameEvaluadorExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameEvaluadorExpresionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLexico1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameEvaluadorExpresionesLayout.setVerticalGroup(
            FrameEvaluadorExpresionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameEvaluadorExpresionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLexico1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FrameProbadorLL1.setTitle("Probar Analizador LL1");
        FrameProbadorLL1.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameProbadorLL1WindowClosing(evt);
            }
        });

        jLabel14.setText("Gramatica:");

        TextAreaGramaticaLL1.setColumns(20);
        TextAreaGramaticaLL1.setRows(5);
        jScrollPane2.setViewportView(TextAreaGramaticaLL1);

        jLabel19.setText("AFD en memoria:");

        ComboBoxProbadorLL1Memoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxProbadorLL1MemoriaMousePressed(evt);
            }
        });

        ScrollPaneTableLexicoLL1.setToolTipText("");
        ScrollPaneTableLexicoLL1.setViewportView(TableLexicoLL1);

        ButtonProbarLexicoEnLL1.setText("Probador Lexico");
        ButtonProbarLexicoEnLL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonProbarLexicoEnLL1MousePressed(evt);
            }
        });

        ScrollPaneRegistroLL1.setToolTipText("");
        ScrollPaneRegistroLL1.setViewportView(TableRegistroLL1);

        ScrollPaneTableLexicoLLNoterminales.setToolTipText("");
        ScrollPaneTableLexicoLLNoterminales.setViewportView(TableLexicoLLNoterminales);

        jLabel15.setText("No terminales");

        jLabel21.setText("Terminales");

        ScrollPaneTableLexicoLLterminales.setToolTipText("");
        ScrollPaneTableLexicoLLterminales.setViewportView(TableLexicoLLterminales);

        jLabel23.setText("Tabla LL1");

        TextAreaAsigmaLL1.setColumns(20);
        TextAreaAsigmaLL1.setRows(5);
        jScrollPane3.setViewportView(TextAreaAsigmaLL1);

        jLabel24.setText("Sigma");

        ScrollPaneProbadorLexicoLL1.setToolTipText("");
        ScrollPaneProbadorLexicoLL1.setViewportView(TableProbadorLexicoLL1);

        ButtonLL1AsignarTokens.setText("Asignar Tokens");
        ButtonLL1AsignarTokens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonLL1AsignarTokensMousePressed(evt);
            }
        });

        ButtonCrearTablaLL2.setText("Crear Tabla LL(1)");
        ButtonCrearTablaLL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCrearTablaLL2MousePressed(evt);
            }
        });

        ButtonAnalizarCadenaLL2.setText("Analizar Cadena");
        ButtonAnalizarCadenaLL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonAnalizarCadenaLL2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelProbadorLL1Layout = new javax.swing.GroupLayout(PanelProbadorLL1);
        PanelProbadorLL1.setLayout(PanelProbadorLL1Layout);
        PanelProbadorLL1Layout.setHorizontalGroup(
            PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(303, 303, 303)
                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(182, 182, 182))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelProbadorLL1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelProbadorLL1Layout.createSequentialGroup()
                        .addComponent(ButtonCrearTablaLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonLL1AsignarTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(ButtonAnalizarCadenaLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBoxProbadorLL1Memoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(ButtonProbarLexicoEnLL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(ScrollPaneTableLexicoLL1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(21, 21, 21))))
            .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(197, 197, 197)
                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(214, 214, 214)
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(307, 307, 307))
            .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addComponent(ScrollPaneRegistroLL1)
                        .addContainerGap())
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addComponent(ScrollPaneTableLexicoLLNoterminales, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(42, 42, 42)
                        .addComponent(ScrollPaneTableLexicoLLterminales, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(44, 44, 44)
                        .addComponent(ScrollPaneProbadorLexicoLL1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(215, 215, 215))))
        );
        PanelProbadorLL1Layout.setVerticalGroup(
            PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBoxProbadorLL1Memoria)))
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneTableLexicoLL1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonProbarLexicoEnLL1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonLL1AsignarTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCrearTablaLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonAnalizarCadenaLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PanelProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ScrollPaneTableLexicoLLNoterminales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(ScrollPaneTableLexicoLLterminales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(PanelProbadorLL1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollPaneProbadorLexicoLL1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneRegistroLL1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FrameProbadorLL1Layout = new javax.swing.GroupLayout(FrameProbadorLL1.getContentPane());
        FrameProbadorLL1.getContentPane().setLayout(FrameProbadorLL1Layout);
        FrameProbadorLL1Layout.setHorizontalGroup(
            FrameProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLL1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameProbadorLL1Layout.setVerticalGroup(
            FrameProbadorLL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLL1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameEFAFN.setTitle("ER a AFN");
        FrameEFAFN.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameEFAFNWindowClosing(evt);
            }
        });

        jLabel16.setText("Id nuev AFN:");
        jLabel16.setInheritsPopupMenu(false);

        jLabel20.setText("Expresion regular:");

        TextIdERAFN.setColumns(1);
        TextIdERAFN.setToolTipText("");
        TextIdERAFN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextIdERAFNKeyTyped(evt);
            }
        });

        ButtonCrearERAFN.setText("Crear AFN");
        ButtonCrearERAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCrearERAFNMousePressed(evt);
            }
        });

        jLabel22.setText("Seleccionar AFD:");

        ComboBoxERAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxERAFNMousePressed(evt);
            }
        });

        TextAreaErAFN.setColumns(20);
        TextAreaErAFN.setRows(5);
        jScrollPane1.setViewportView(TextAreaErAFN);

        javax.swing.GroupLayout PanelERAFNLayout = new javax.swing.GroupLayout(PanelERAFN);
        PanelERAFN.setLayout(PanelERAFNLayout);
        PanelERAFNLayout.setHorizontalGroup(
            PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelERAFNLayout.createSequentialGroup()
                .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelERAFNLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextIdERAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxERAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelERAFNLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(ButtonCrearERAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        PanelERAFNLayout.setVerticalGroup(
            PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelERAFNLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(TextIdERAFN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelERAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxERAFN))
                .addGap(50, 50, 50)
                .addComponent(ButtonCrearERAFN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        javax.swing.GroupLayout FrameEFAFNLayout = new javax.swing.GroupLayout(FrameEFAFN.getContentPane());
        FrameEFAFN.getContentPane().setLayout(FrameEFAFNLayout);
        FrameEFAFNLayout.setHorizontalGroup(
            FrameEFAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameEFAFNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelERAFN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameEFAFNLayout.setVerticalGroup(
            FrameEFAFNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameEFAFNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelERAFN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        FrameProbadorLR0.setTitle("Probar Analizador LR(0)");
        FrameProbadorLR0.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                FrameProbadorLR0WindowClosing(evt);
            }
        });

        jLabel25.setText("Gramatica:");

        TextAreaGramaticaLL2.setColumns(20);
        TextAreaGramaticaLL2.setRows(5);
        jScrollPane4.setViewportView(TextAreaGramaticaLL2);

        jLabel26.setText("AFD en memoria:");

        ComboBoxProbadorLL1Memoria1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ComboBoxProbadorLL1Memoria1MousePressed(evt);
            }
        });

        ScrollPaneTableLexicoLL2.setToolTipText("");
        ScrollPaneTableLexicoLL2.setViewportView(TableLexicoLL2);

        ButtonProbarLexicoEnLL2.setText("Probador Lexico");

        ScrollPaneRegistroLL2.setToolTipText("");
        ScrollPaneRegistroLL2.setViewportView(TableRegistroLL2);

        ScrollPaneTableLexicoLLNoterminales1.setToolTipText("");
        ScrollPaneTableLexicoLLNoterminales1.setViewportView(TableLexicoLLNoterminales1);

        jLabel27.setText("No terminales");

        jLabel28.setText("Terminales");

        ScrollPaneTableLexicoLLterminales1.setToolTipText("");
        ScrollPaneTableLexicoLLterminales1.setViewportView(TableLexicoLLterminales1);

        jLabel29.setText("Tabla LL1");

        TextAreaAsigmaLL2.setColumns(20);
        TextAreaAsigmaLL2.setRows(5);
        jScrollPane5.setViewportView(TextAreaAsigmaLL2);

        jLabel30.setText("Sigma");

        ScrollPaneProbadorLexicoLL2.setToolTipText("");
        ScrollPaneProbadorLexicoLL2.setViewportView(TableProbadorLexicoLL2);

        ButtonCrearTablaLL3.setText("Analizar Cadena");
        ButtonCrearTablaLL3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCrearTablaLL3MousePressed(evt);
            }
        });

        ButtonCrearTablaLL4.setText("Crear Tabla LL(1)");
        ButtonCrearTablaLL4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCrearTablaLL4MousePressed(evt);
            }
        });

        javax.swing.GroupLayout PanelProbadorLR0Layout = new javax.swing.GroupLayout(PanelProbadorLR0);
        PanelProbadorLR0.setLayout(PanelProbadorLR0Layout);
        PanelProbadorLR0Layout.setHorizontalGroup(
            PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(303, 303, 303)
                        .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(182, 182, 182))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelProbadorLR0Layout.createSequentialGroup()
                        .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                                .addComponent(ButtonCrearTablaLL4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ButtonCrearTablaLL3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                                .addComponent(jScrollPane4)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)))
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboBoxProbadorLL1Memoria1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(ButtonProbarLexicoEnLL2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(ScrollPaneTableLexicoLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(21, 21, 21))))
            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(197, 197, 197)
                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(214, 214, 214)
                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(307, 307, 307))
            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addComponent(ScrollPaneRegistroLL2)
                        .addContainerGap())
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addComponent(ScrollPaneTableLexicoLLNoterminales1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(42, 42, 42)
                        .addComponent(ScrollPaneTableLexicoLLterminales1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(44, 44, 44)
                        .addComponent(ScrollPaneProbadorLexicoLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(215, 215, 215))))
        );
        PanelProbadorLR0Layout.setVerticalGroup(
            PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBoxProbadorLL1Memoria1)))
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPaneTableLexicoLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonProbarLexicoEnLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCrearTablaLL3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCrearTablaLL4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PanelProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ScrollPaneTableLexicoLLNoterminales1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(ScrollPaneTableLexicoLLterminales1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(PanelProbadorLR0Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollPaneProbadorLexicoLL2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(ScrollPaneRegistroLL2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FrameProbadorLR0Layout = new javax.swing.GroupLayout(FrameProbadorLR0.getContentPane());
        FrameProbadorLR0.getContentPane().setLayout(FrameProbadorLR0Layout);
        FrameProbadorLR0Layout.setHorizontalGroup(
            FrameProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLR0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLR0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        FrameProbadorLR0Layout.setVerticalGroup(
            FrameProbadorLR0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameProbadorLR0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelProbadorLR0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compiladores");
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(200, 200));
        setName("mainViewFrame"); // NOI18N

        MenuAFN.setText("Analizador Lexico");

        MenuAFNBasico.setText("AFN Basico");
        MenuAFNBasico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuAFNBasicoMousePressed(evt);
            }
        });
        MenuAFN.add(MenuAFNBasico);

        MenuUnirAFNS.setText("Unir AFN'S");
        MenuUnirAFNS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuUnirAFNSMousePressed(evt);
            }
        });
        MenuAFN.add(MenuUnirAFNS);

        MenuConcatenarAFN.setText("Concatenar AFN'S");
        MenuConcatenarAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuConcatenarAFNMousePressed(evt);
            }
        });
        MenuAFN.add(MenuConcatenarAFN);

        MenuCerraduraTransitivaAFN.setText("Cerradura Transitiva AFN'S");
        MenuCerraduraTransitivaAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuCerraduraTransitivaAFNMousePressed(evt);
            }
        });
        MenuAFN.add(MenuCerraduraTransitivaAFN);

        MenuCerraduraKleen.setText("Cerradura Kleen AFN'S");
        MenuCerraduraKleen.setToolTipText("");
        MenuCerraduraKleen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuCerraduraKleenMousePressed(evt);
            }
        });
        MenuAFN.add(MenuCerraduraKleen);

        MenuOperacionOptional.setText("Operacion Opcional");
        MenuOperacionOptional.setToolTipText("");
        MenuOperacionOptional.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuOperacionOptionalMousePressed(evt);
            }
        });
        MenuAFN.add(MenuOperacionOptional);

        MenuERaAFN.setText("ER a AFN");
        MenuERaAFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuERaAFNMousePressed(evt);
            }
        });
        MenuAFN.add(MenuERaAFN);

        MenuUnionLexico.setText("Union Lexico");
        MenuUnionLexico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuUnionLexicoMousePressed(evt);
            }
        });
        MenuAFN.add(MenuUnionLexico);

        MenuAFNaAFD.setText("Convertir AFN a AFD");
        MenuAFNaAFD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuAFNaAFDMousePressed(evt);
            }
        });
        MenuAFN.add(MenuAFNaAFD);

        MenuAnalizarCadena.setText("Analizar una cadena");
        MenuAFN.add(MenuAnalizarCadena);

        MenuProbadorAnalizadorLexico.setText("Probar Analizador Lexico");
        MenuProbadorAnalizadorLexico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuProbadorAnalizadorLexicoMousePressed(evt);
            }
        });
        MenuAFN.add(MenuProbadorAnalizadorLexico);

        MenuBar.add(MenuAFN);

        MenuSintactico.setText("Analizador Sintactico");

        jMenuDescensoRecursivo.setText("Descenso Recursivo");

        MenuItemCalculadora.setText("Calculadora");
        MenuItemCalculadora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuItemCalculadoraMousePressed(evt);
            }
        });
        jMenuDescensoRecursivo.add(MenuItemCalculadora);

        MenuSintactico.add(jMenuDescensoRecursivo);

        MenuDescRecGramaticaGramatica.setText("Descenso Recursivo Gramatica de Gramaticas");
        MenuSintactico.add(MenuDescRecGramaticaGramatica);

        MenuAnalisisLL1.setText("Analisis LL(1)");
        MenuAnalisisLL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuAnalisisLL1MousePressed(evt);
            }
        });
        MenuSintactico.add(MenuAnalisisLL1);

        AnalizadorLR0.setText("Analizador LR(0)");
        AnalizadorLR0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AnalizadorLR0MousePressed(evt);
            }
        });
        MenuSintactico.add(AnalizadorLR0);

        MenuBar.add(MenuSintactico);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuAFNBasicoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAFNBasicoMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNBasico.setBounds(x, y, WIDTH, HEIGHT);
        TextCaracterInferior.setText("");
        TextCaracterSuperior.setText("");
        TextIDAFN.setText("");
        FrameAFNBasico.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAFNBasicoMousePressed

    private void FrameAFNBasicoWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNBasicoWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNBasicoWindowClosing

    private void TextCaracterInferiorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextCaracterInferiorKeyTyped
        // TODO add your handling code here:
        if (TextCaracterInferior.getText().length() >= 1) {
            TextCaracterInferior.setText(TextCaracterInferior.getText().substring(0, 0));
        }
    }//GEN-LAST:event_TextCaracterInferiorKeyTyped

    private void TextCaracterSuperiorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextCaracterSuperiorKeyTyped
        // TODO add your handling code here:
        if (TextCaracterSuperior.getText().length() >= 1) {
            TextCaracterSuperior.setText(TextCaracterSuperior.getText().substring(0, 0));
        }
    }//GEN-LAST:event_TextCaracterSuperiorKeyTyped

    private void TextIDAFNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextIDAFNKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == evt.VK_BACK_SPACE)
                || (c == evt.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TextIDAFNKeyTyped

    private void ButtonCrearAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCrearAFNMousePressed
        // TODO add your handling code here:
        AFN afn = new AFN();
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(TextIDAFN.getText())).findFirst();
        if (!op.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Id ya existe.", "ERROR", JOptionPane.OK_OPTION);
        } else {
            afn.setIdAFN(Integer.parseInt(TextIDAFN.getText()));
            AFN.conjuntoAFNs.add(afn.CrearAFNBasico(TextCaracterInferior.getText().charAt(0), TextCaracterSuperior.getText().charAt(0)));
            for (AFN item : AFN.conjuntoAFNs) {
                System.out.println("Valor: " + "Id: " + item.getIdAFN() + "" + item.getEstados().toString());
            }
            JOptionPane.showMessageDialog(this, "Creacion Correcta del AFN.", "Exito", JOptionPane.WARNING_MESSAGE);
            System.out.println("Vamos a crear AFN");
            FrameAFNBasico.dispose();
            this.setVisible(true);
        }

    }//GEN-LAST:event_ButtonCrearAFNMousePressed

    private void FrameAFNConcatenarWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNConcatenarWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNConcatenarWindowClosing

    private void MenuConcatenarAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuConcatenarAFNMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxConcatenar1.setModel(model);
        DefaultComboBoxModel mode2 = new DefaultComboBoxModel();
        mode2.removeAllElements();
        ComboBoxConcatenar2.setModel(mode2);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNConcatenar.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNConcatenar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuConcatenarAFNMousePressed

    private void ButtonConcatenarAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonConcatenarAFNMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxConcatenar1.getSelectedItem().toString().split(" ");
        String[] r2 = ComboBoxConcatenar2.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        Optional<AFN> op2 = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r2[r.length - 1])).findFirst();
        AFN.conjuntoAFNs.remove(op.get());
        AFN.conjuntoAFNs.remove(op2.get());
        AFN afn1 = op.get();
        AFN afn2 = op2.get();
        System.out.println("AFN 1 a concatenar: " + afn1.getEstados().toString());
        System.out.println("AFN 2 a concatenar: " + afn2.getEstados().toString());
        afn1.afnUnionAND(afn2);
        AFN.conjuntoAFNs.add(afn1);
        System.out.println("Se concatenaron...  ");
        FrameAFNConcatenar.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonConcatenarAFNMousePressed

    private void ComboBoxConcatenar1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxConcatenar1MousePressed
        // TODO add your handling code here:

        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxConcatenar1.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxConcatenar1.setModel(model);
    }//GEN-LAST:event_ComboBoxConcatenar1MousePressed

    private void ComboBoxConcatenar2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxConcatenar2MousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxConcatenar2.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxConcatenar2.setModel(model);
    }//GEN-LAST:event_ComboBoxConcatenar2MousePressed

    private void ComboBoxCerraduraTransitivaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxCerraduraTransitivaMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxCerraduraTransitiva.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxCerraduraTransitiva.setModel(model);
    }//GEN-LAST:event_ComboBoxCerraduraTransitivaMousePressed

    private void ButtonCerraduraTransitivaAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCerraduraTransitivaAFNMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxCerraduraTransitiva.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        AFN.conjuntoAFNs.remove(op.get());
        AFN afn1 = op.get();
        System.out.println("AFN 1 se aplica cerradura transitiva: " + afn1.getEstados().toString());
        afn1.cerraduraPositiva();
        AFN.conjuntoAFNs.add(afn1);
        System.out.println("Se aplico cerradura transitiva...");
        FrameAFNCerraduraTransitiva.dispose();
        this.setVisible(true);

    }//GEN-LAST:event_ButtonCerraduraTransitivaAFNMousePressed

    private void FrameAFNCerraduraTransitivaWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNCerraduraTransitivaWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNCerraduraTransitivaWindowClosing

    private void MenuCerraduraTransitivaAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuCerraduraTransitivaAFNMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxCerraduraTransitiva.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNCerraduraTransitiva.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNCerraduraTransitiva.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCerraduraTransitivaAFNMousePressed

    private void ComboBoxCerraduraKleenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxCerraduraKleenMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxCerraduraKleen.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxCerraduraKleen.setModel(model);
    }//GEN-LAST:event_ComboBoxCerraduraKleenMousePressed

    private void ButtonCerraduraKleenAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCerraduraKleenAFNMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxCerraduraKleen.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        AFN.conjuntoAFNs.remove(op.get());
        AFN afn1 = op.get();
        System.out.println("AFN 1 se aplica cerradura de kleen a: " + afn1.getEstados().toString());
        afn1.cerraduraKleen();
        AFN.conjuntoAFNs.add(afn1);
        System.out.println("Se aplico cerradura kleen...");
        FrameAFNCerraduraKleen.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonCerraduraKleenAFNMousePressed

    private void FrameAFNCerraduraKleenWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNCerraduraKleenWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNCerraduraKleenWindowClosing

    private void MenuCerraduraKleenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuCerraduraKleenMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxCerraduraKleen.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNCerraduraKleen.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNCerraduraKleen.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuCerraduraKleenMousePressed

    private void ComboBoxUnion1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxUnion1MousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxUnion1.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxUnion1.setModel(model);
    }//GEN-LAST:event_ComboBoxUnion1MousePressed

    private void ComboBoxUnion2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxUnion2MousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxUnion2.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxUnion2.setModel(model);
    }//GEN-LAST:event_ComboBoxUnion2MousePressed

    private void ButtonUnirAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonUnirAFNMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxUnion1.getSelectedItem().toString().split(" ");
        String[] r2 = ComboBoxUnion2.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        Optional<AFN> op2 = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r2[r.length - 1])).findFirst();
        AFN.conjuntoAFNs.remove(op.get());
        AFN.conjuntoAFNs.remove(op2.get());
        AFN afn1 = op.get();
        AFN afn2 = op2.get();
        System.out.println("AFN 1 a unir: " + afn1.getEstados().toString());
        System.out.println("AFN 2 a unir: " + afn2.getEstados().toString());
        afn1.afnUnionOR(afn2);
        AFN.conjuntoAFNs.add(afn1);
        System.out.println("Se unieron...  ");
        FrameAFNUnion.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonUnirAFNMousePressed

    private void FrameAFNUnionWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNUnionWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNUnionWindowClosing

    private void MenuUnirAFNSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuUnirAFNSMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxUnion1.setModel(model);
        DefaultComboBoxModel mode2 = new DefaultComboBoxModel();
        mode2.removeAllElements();
        ComboBoxUnion2.setModel(mode2);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNUnion.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNUnion.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuUnirAFNSMousePressed

    private void FrameAFNUnionLexicoWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNUnionLexicoWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNUnionLexicoWindowClosing

    private void MenuUnionLexicoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuUnionLexicoMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        Object[][] data;
        Object[] columnNames = {"Id AFN", "Token", "Seleccionar AFN"};
        int lafn = AFN.conjuntoAFNs.size();
        ArrayList<AFN> aux = (ArrayList<AFN>) AFN.conjuntoAFNs.stream().collect(Collectors.toList());

        data = new Object[lafn][columnNames.length];
        for (int i = 0; i < lafn; i++) {
            Object[] tmp = {aux.get(i).getIdAFN(), 0, false};
            data[i] = tmp;
        }

        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableUnionLexico.setModel(modeltable1);
        DefaultTableModel modeltable = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 1 || column == 2) {
                    return true;
                }
                return false;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnClass[columnIndex];
            }
        };
        TextIdAFNUnionLexico.setText("");
        TableUnionLexico.setModel(modeltable);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNUnionLexico.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNUnionLexico.setVisible(true);
        ScrollPaneUnionLexico.setAutoscrolls(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuUnionLexicoMousePressed

    private void TextIdAFNUnionLexicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextIdAFNUnionLexicoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == evt.VK_BACK_SPACE)
                || (c == evt.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TextIdAFNUnionLexicoKeyTyped

    private void ButtonUnionEspecialMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonUnionEspecialMousePressed
        // TODO add your handling code here:
        AFN afn = new AFN();
        HashSet<AFN> conjuntoaux = (HashSet<AFN>) AFN.conjuntoAFNs.clone();
        int idafn = Integer.parseInt(TextIdAFNUnionLexico.getText());
        int l = TableUnionLexico.getModel().getRowCount();

        for (int i = 0; i < l; i++) {
            int tokenafn = Integer.parseInt(TableUnionLexico.getModel().getValueAt(i, 1).toString());
            Object data = TableUnionLexico.getModel().getValueAt(i, 2);
            System.out.println("Objeto tabla: " + data.toString());
            if (data.toString().equalsIgnoreCase("true")) {
                String aux = TableUnionLexico.getModel().getValueAt(i, 0).toString();
                Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(aux)).findFirst();
                AFN tmp = op.get();
                for (Estado estadoacep : tmp.getEstadosAceptacion()) {
                    estadoacep.setToken(tokenafn);
                }
                conjuntoaux.remove(tmp);
            }
        }
        AFN.conjuntoAFNs.remove(conjuntoaux);
        afn.setIdAFN(idafn);
        HashSet<AFN> conjuntoaux2 = (HashSet<AFN>) AFN.conjuntoAFNs.clone();
        AFN.conjuntoAFNsUnionLexico.addAll(conjuntoaux2);
        afn.unionLexicoAFNs();
        AFN.conjuntoAFNs.add(afn);
        AFN.conjuntoAFNs.addAll(conjuntoaux);
        FrameAFNUnionLexico.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonUnionEspecialMousePressed

    private void FrameConvertirAFNaAFDWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameConvertirAFNaAFDWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameConvertirAFNaAFDWindowClosing

    private void MenuAFNaAFDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAFNaAFDMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxAFNaAFD.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableConvertirAFNaAFD.setModel(modeltable1);
        TextIdAFNaAFD.enable(true);
        ComboBoxAFNaAFD.enable(true);
        TextIdAFNaAFD.setText("");
        ButtonConvertirAFNaAFDSalir.setVisible(false);
        ButtonGuardarTablaArchivo.setVisible(false);
        ButtonConvertirAFNaAFD.setVisible(true);
        ButtonConvertirAFNaAFDSalir.setVisible(false);
        FrameConvertirAFNaAFD.setBounds(x, y, WIDTH, HEIGHT);
        FrameConvertirAFNaAFD.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAFNaAFDMousePressed

    private void ComboBoxAFNaAFDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxAFNaAFDMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxAFNaAFD.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
//            if (item.) {
//                model.addElement("Id AFN a convertir a AFD: " + item.getIdAFN());
//            }
            model.addElement("Id AFN a convertir a AFD: " + item.getIdAFN());
        }
        ComboBoxUnion2.setModel(model);
    }//GEN-LAST:event_ComboBoxAFNaAFDMousePressed

    private void ButtonGuardarTablaArchivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonGuardarTablaArchivoMousePressed
        // TODO add your handling code here:
        FrameConvertirAFNaAFD.setVisible(false);
        int a = FileChooserSaveTable.showSaveDialog(FrameConvertirAFNaAFD);
        switch (a) {
            case JFileChooser.APPROVE_OPTION:
                System.out.println("guardar");
                FrameConvertirAFNaAFD.setVisible(true);
                File fileToSave = FileChooserSaveTable.getSelectedFile();
                UtilFile save = new UtilFile();
                save.GuardarArchivo(AFD.conjuntoAFDs, fileToSave.getAbsolutePath());
                break;
            case JFileChooser.CANCEL_OPTION:
                System.out.println("cancelar");
                FrameConvertirAFNaAFD.setVisible(true);
                break;
            case JFileChooser.ERROR_OPTION:
                System.out.println("Error");
                FrameConvertirAFNaAFD.setVisible(true);
                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_ButtonGuardarTablaArchivoMousePressed

    private void FrameSaveTableWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameSaveTableWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_FrameSaveTableWindowClosing

    private void ComboBoxOpcionalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxOpcionalMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxOpcional.getModel();
        model.removeAllElements();
        for (AFN item : AFN.conjuntoAFNs) {
            model.addElement("Id AFN: " + item.getIdAFN());
        }
        ComboBoxCerraduraKleen.setModel(model);
    }//GEN-LAST:event_ComboBoxOpcionalMousePressed

    private void ButtonOpcionalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonOpcionalMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxOpcional.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        AFN.conjuntoAFNs.remove(op.get());
        AFN afn1 = op.get();
        System.out.println("AFN se aplica operacion optional a: " + afn1.getEstados().toString());
        afn1.opcional();
        AFN.conjuntoAFNs.add(afn1);
        System.out.println("Se aplico operacion optional...");
        FrameAFNOpcional.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonOpcionalMousePressed

    private void FrameAFNOpcionalWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameAFNOpcionalWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameAFNOpcionalWindowClosing

    private void MenuOperacionOptionalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuOperacionOptionalMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxOpcional.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.50);
        HEIGHT = (int) (dimension.getHeight() * 0.50);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        FrameAFNOpcional.setBounds(x, y, WIDTH, HEIGHT);
        FrameAFNOpcional.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuOperacionOptionalMousePressed

    private void ButtonConvertirAFNaAFDSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonConvertirAFNaAFDSalirMousePressed
        // TODO add your handling code here:
        FrameConvertirAFNaAFD.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonConvertirAFNaAFDSalirMousePressed

    private void ButtonConvertirAFNaAFDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonConvertirAFNaAFDMousePressed
        // TODO add your handling code here:
        //        ScrollPaneConvertirAFNaAFD.remove(TableConvertirAFNaAFD);
        int idafd = Integer.parseInt(TextIdAFNaAFD.getText());
        String[] r = ComboBoxAFNaAFD.getSelectedItem().toString().split(" ");
        Optional<AFN> op = AFN.conjuntoAFNs.stream().filter(tmp -> tmp.getIdAFN() == Integer.parseInt(r[r.length - 1])).findFirst();
        System.out.println("algo regresa... " + op.toString());
        AFN.conjuntoAFNs.remove(op.get());
        AFN afn1 = op.get();
        System.out.println("Convertira el AFN con Id a AFD" + afn1.getIdAFN() + " : " + afn1.getEstados().toString());
        AFD result = afn1.toAFD(idafd);
        System.out.println("AFD RESULTANTE: " + result.toString());

        Object[][] data;
        Object[] columnNames = new Object[result.getAlfabeto().size() + 1];

        for (int i = 0; i < result.getAlfabeto().size(); i++) {
            columnNames[i] = (char) result.getAlfabeto().toArray()[i];
        }
        columnNames[result.getAlfabeto().size()] = "Token";
        Table<Integer, String, Integer> tmp = result.getTabla();
        HashMap<Integer, Integer> estadosacep = result.getEstadosAceptacion();
        int l = tmp.rowKeySet().size();
        String string = result.getAlfabeto().toString().replaceAll("[,\\[\\]]", "");

        data = new Object[l][result.getAlfabeto().size() + 1];
        for (int i = 0; i < l; i++) {
            for (int j = 0; j < result.getAlfabeto().size(); j++) {
                String au = string.charAt(j) + "";
                data[i][j] = tmp.get(i, au);
            }
            data[i][result.getAlfabeto().size()] = estadosacep.get(i);
        }

        //        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableConvertirAFNaAFD.setModel(modeltable1);
        DefaultTableModel modeltable = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        AFD.conjuntoAFDs.add(result);
        TextIdAFNaAFD.enable(false);
        ComboBoxAFNaAFD.enable(false);
        TableConvertirAFNaAFD.setModel(modeltable);
        TableConvertirAFNaAFD.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        PanelConvertirAFNaAFD.validate();
        PanelConvertirAFNaAFD.revalidate();
        ScrollPaneUnionLexico.validate();
        ScrollPaneUnionLexico.revalidate();
        ScrollPaneUnionLexico.repaint();
        ButtonConvertirAFNaAFD.setVisible(false);
        ButtonConvertirAFNaAFDSalir.setVisible(true);
        ButtonGuardarTablaArchivo.setVisible(true);
    }//GEN-LAST:event_ButtonConvertirAFNaAFDMousePressed

    private void TextIdAFNaAFDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextIdAFNaAFDKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == evt.VK_BACK_SPACE)
                || (c == evt.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TextIdAFNaAFDKeyTyped

    private void ComboBoxProbadorLexicoMemoriaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxProbadorLexicoMemoriaMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxProbadorLexicoMemoria.getModel();
        model.removeAllElements();
        if (!AFD.conjuntoAFDs.isEmpty()) {
            for (AFD item : AFD.conjuntoAFDs) {
                model.addElement("Id AFD: " + item.getIdAFD());
            }
            ButtonProbadorLexicoSelecionar.setVisible(true);
        }
    }//GEN-LAST:event_ComboBoxProbadorLexicoMemoriaMousePressed

    private void ButtonProbadorLexicoSelecionarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoSelecionarMousePressed
        // TODO add your handling code here:
        System.out.println("Mostrar tex area");
        ComboBoxProbadorLexicoMemoria.enable(false);
        TextAreaProbadorLexico.setVisible(true);
        ButtonProbadorLexicoAnalizar.setVisible(true);
        ButtonProbadorLexicoSelecionar.setVisible(false);
    }//GEN-LAST:event_ButtonProbadorLexicoSelecionarMousePressed

    private void ButtonProbadorLexicoSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoSalirMousePressed
        // TODO add your handling code here:
        FrameProbadorLexico.dispose();
        this.setVisible(true);
    }//GEN-LAST:event_ButtonProbadorLexicoSalirMousePressed

    private void FrameProbadorLexicoWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameProbadorLexicoWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameProbadorLexicoWindowClosing

    private void ButtonProbadorLexicoAbrirArchivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoAbrirArchivoMousePressed
        // TODO add your handling code here:
        FrameProbadorLexico.setVisible(false);
        int a = FileChooserOpenTable.showOpenDialog(FrameProbadorLexico);
        switch (a) {
            case JFileChooser.APPROVE_OPTION:
                System.out.println("abrir archivo");
                FrameProbadorLexico.setVisible(true);
                File selectedFile = FileChooserOpenTable.getSelectedFile();
                UtilFile s = new UtilFile();
                JOptionPane.showMessageDialog(this, s.AbirArchivoAFD(selectedFile), "", JOptionPane.YES_OPTION);
                ButtonProbadorLexicoAbrirArchivo.setVisible(false);
                break;
            case JFileChooser.CANCEL_OPTION:
                FrameProbadorLexico.setVisible(true);
                break;
            case JFileChooser.ERROR_OPTION:
                FrameProbadorLexico.setVisible(true);
                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_ButtonProbadorLexicoAbrirArchivoMousePressed

    private void MenuProbadorAnalizadorLexicoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuProbadorAnalizadorLexicoMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxProbadorLexicoMemoria.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.60);
        HEIGHT = (int) (dimension.getHeight() * 0.60);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableProbadorLexico.setModel(modeltable1);
        ButtonProbadorLexicoSelecionar.setVisible(false);
        ButtonProbadorLexicoAnalizar.setVisible(false);
        ButtonProbadorLexicoAbrirArchivo.setVisible(true);
        TextAreaProbadorLexico.setVisible(false);
        TextAreaProbadorLexico.enable(true);
        TableProbadorLexico.setVisible(false);
        ComboBoxProbadorLexicoMemoria.enable(true);
        TextAreaProbadorLexico.setText("");
        FrameProbadorLexico.setBounds(x, y, WIDTH, HEIGHT);
        FrameProbadorLexico.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuProbadorAnalizadorLexicoMousePressed

    private void FrameOpenTableWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameOpenTableWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_FrameOpenTableWindowClosing

    private void ButtonProbadorLexicoAnalizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoAnalizarMousePressed
        // TODO add your handling code here:
        String[] r = ComboBoxProbadorLexicoMemoria.getSelectedItem().toString().split(" ");
        Optional<AFD> op = AFD.conjuntoAFDs.stream().filter(x -> x.getIdAFD() == Integer.parseInt(r[r.length - 1])).findFirst();
        String sigma = TextAreaProbadorLexico.getText();
        System.out.println("Cadena a analizar: " + sigma);
        AnalizadorLexico lexico = new AnalizadorLexico(sigma, op.get());
        List<AnalizadorLexicoDTO> tmp = lexico.analizarCadena();
        
        System.out.println("TABLA: " + tmp.toString());

        Object[][] data;
        Object[] columnNames = {"Token", "Lexema"};

        int l = tmp.size() - 1;
        int columnl = columnNames.length;
        data = new Object[l][columnl];
        for (int i = 0; i < l; i++) {
            data[i][0] = tmp.get(i).getToken();
            data[i][1] = tmp.get(i).getLexema();
        }
        
        //        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        TableProbadorLexico.setModel(modeltable);
        ButtonProbadorLexicoAnalizar.setVisible(false);
        TextAreaProbadorLexico.enable(false);
        TableProbadorLexico.setVisible(true);
    }//GEN-LAST:event_ButtonProbadorLexicoAnalizarMousePressed

    private void ComboBoxProbadorLexicoMemoria1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxProbadorLexicoMemoria1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxProbadorLexicoMemoria1MousePressed

    private void ButtonProbadorLexicoSelecionar1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoSelecionar1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonProbadorLexicoSelecionar1MousePressed

    private void ButtonProbadorLexicoSalir1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoSalir1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonProbadorLexicoSalir1MousePressed

    private void ButtonProbadorLexicoAbrirArchivo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoAbrirArchivo1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonProbadorLexicoAbrirArchivo1MousePressed

    private void ButtonProbadorLexicoAnalizar1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbadorLexicoAnalizar1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonProbadorLexicoAnalizar1MousePressed

    private void FrameEvaluadorExpresionesWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameEvaluadorExpresionesWindowClosing
        // TODO add your handling code here:

    }//GEN-LAST:event_FrameEvaluadorExpresionesWindowClosing

    private void MenuItemCalculadoraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuItemCalculadoraMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxProbadorLexicoMemoria.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.60);
        HEIGHT = (int) (dimension.getHeight() * 0.60);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableProbadorLexico.setModel(modeltable1);
        ButtonProbadorLexicoSelecionar.setVisible(false);
        ButtonProbadorLexicoAnalizar.setVisible(false);
        ButtonProbadorLexicoAbrirArchivo.setVisible(true);
        TextAreaProbadorLexico.setVisible(false);
        TextAreaProbadorLexico.enable(true);
        TableProbadorLexico.setVisible(false);
        ComboBoxProbadorLexicoMemoria.enable(true);
        TextAreaProbadorLexico.setText("");
        FrameEvaluadorExpresiones.setBounds(x, y, WIDTH, HEIGHT);
        FrameEvaluadorExpresiones.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_MenuItemCalculadoraMousePressed

    private void FrameProbadorLL1WindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameProbadorLL1WindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameProbadorLL1WindowClosing

    private void MenuAnalisisLL1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAnalisisLL1MousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxProbadorLexicoMemoria.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.9);
        HEIGHT = (int) (dimension.getHeight() * 0.9);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableLexicoLL1.setModel(modeltable1);
        TableLexicoLL1.setVisible(false);
        TableLexicoLLNoterminales.setModel(modeltable1);
        TableLexicoLLNoterminales.setVisible(false);
        TableLexicoLLterminales.setModel(modeltable1);
        TableLexicoLLterminales.setVisible(false);
        TableProbadorLexicoLL1.setModel(modeltable1);
        TableProbadorLexicoLL1.setVisible(false);
        TableRegistroLL1.setModel(modeltable1);
        TableRegistroLL1.setVisible(false);
        ComboBoxProbadorLexicoMemoria.enable(true);
        TextAreaAsigmaLL1.setText("");
        TextAreaGramaticaLL1.setText("");
        FrameProbadorLL1.setBounds(x, y, WIDTH, HEIGHT);
        FrameProbadorLL1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuAnalisisLL1MousePressed

    private void ButtonCrearERAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCrearERAFNMousePressed
        // TODO add your handling code here:
        int idafn = Integer.parseInt(TextIdERAFN.getText());
        String rs = TextAreaErAFN.getText();

        System.out.println("Expresion regular a AFN: " + rs);

        String[] r = ComboBoxERAFN.getSelectedItem().toString().split(" ");
        Optional<AFD> op = AFD.conjuntoAFDs.stream().filter(x -> x.getIdAFD() == Integer.parseInt(r[r.length - 1])).findFirst();

        ExpresionRegularToAFN ertoafn = new ExpresionRegularToAFN(rs, op.get());
        ertoafn.iniciarConversionExpresionRegularToAFN();
        AFN result = ertoafn.getAfnResultante();
        result.setIdAFN(idafn);
        AFN.conjuntoAFNs.add(result);
        FrameEFAFN.dispose();
    }//GEN-LAST:event_ButtonCrearERAFNMousePressed

    private void FrameEFAFNWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameEFAFNWindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameEFAFNWindowClosing

    private void ComboBoxERAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxERAFNMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxERAFN.getModel();
        model.removeAllElements();
        if (!AFD.conjuntoAFDs.isEmpty()) {
            for (AFD item : AFD.conjuntoAFDs) {
                model.addElement("Id AFD: " + item.getIdAFD());
            }
        }
    }//GEN-LAST:event_ComboBoxERAFNMousePressed

    private void TextIdERAFNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextIdERAFNKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == evt.VK_BACK_SPACE)
                || (c == evt.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_TextIdERAFNKeyTyped

    private void MenuERaAFNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuERaAFNMousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxERAFN.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.6);
        HEIGHT = (int) (dimension.getHeight() * 0.6);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        ComboBoxERAFN.enable(true);
        TextAreaErAFN.setText("");
        TextIdERAFN.setText("");
        FrameEFAFN.setBounds(x, y, WIDTH, HEIGHT);
        FrameEFAFN.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuERaAFNMousePressed

    private void ComboBoxProbadorLL1MemoriaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxProbadorLL1MemoriaMousePressed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) ComboBoxProbadorLL1Memoria.getModel();
        model.removeAllElements();
        if (!AFD.conjuntoAFDs.isEmpty()) {
            for (AFD item : AFD.conjuntoAFDs) {
                model.addElement("Id AFD: " + item.getIdAFD());
            }
        }
    }//GEN-LAST:event_ComboBoxProbadorLL1MemoriaMousePressed

    private void ButtonCrearTablaLL2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCrearTablaLL2MousePressed
        // TODO add your handling code here:
        System.out.println("Se inicia la tabla LL1");
        String cadenagramatica = TextAreaGramaticaLL1.getText();
        String sigma = TextAreaAsigmaLL1.getText();
        gramaticall1 = null;
        gramaticall1 = new Gramatica();
        
        gramaticall1.crearGramatica(cadenagramatica);
        
        String[] r = ComboBoxProbadorLL1Memoria.getSelectedItem().toString().split(" ");
        Optional<AFD> op = AFD.conjuntoAFDs.stream().filter(x -> x.getIdAFD() == Integer.parseInt(r[r.length - 1])).findFirst();
        gramaticall1.setAfdGramatica(op.get());
        
        ArrayList<SimboloGramatica> noterminales = new ArrayList<>(gramaticall1.getSimbolosNoTerminales());
        ArrayList<SimboloGramatica> terminales = new ArrayList<>(gramaticall1.getSimbolosTerminales());

        Object[][] data;
        Object[] columnNames = {"Simbolo No terminal"};

        int l = noterminales.size();
        int columnl = columnNames.length;
        data = new Object[l][columnl];
        for (int i = 0; i < l; i++) {
            data[i][0] = noterminales.get(i).getSimbolo();
        }
        //        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        TableLexicoLLNoterminales.setModel(modeltable);
        TableLexicoLLNoterminales.setVisible(true);

        Object[][] data2;
        Object[] columnNames2 = {"Simbolo terminal","Token"};

        int l2 = terminales.size();
        int columnl2 = columnNames2.length;
        data2 = new Object[l2][columnl2];
        for (int i = 0; i < l2; i++) {
            data2[i][0] = terminales.get(i).getSimbolo();
            data2[i][1] = 0;
        }
        final Class[] columnClass = new Class[]{String.class, Integer.class};
        DefaultTableModel modeltable2 = new DefaultTableModel(data2, columnNames2) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 1 || column == 1) {
                    return true;
                }
                return false;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnClass[columnIndex];
            }
        };
        TableLexicoLLterminales.setModel(modeltable2);
        TableLexicoLLterminales.setVisible(true);
        
    }//GEN-LAST:event_ButtonCrearTablaLL2MousePressed

    private void ComboBoxProbadorLL1Memoria1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxProbadorLL1Memoria1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxProbadorLL1Memoria1MousePressed

    private void ButtonCrearTablaLL3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCrearTablaLL3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonCrearTablaLL3MousePressed

    private void ButtonCrearTablaLL4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCrearTablaLL4MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonCrearTablaLL4MousePressed

    private void FrameProbadorLR0WindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrameProbadorLR0WindowClosing
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_FrameProbadorLR0WindowClosing

    private void AnalizadorLR0MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnalizadorLR0MousePressed
        // TODO add your handling code here:
        int x, y;
        int WIDTH, HEIGHT;
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        ComboBoxProbadorLexicoMemoria.setModel(model);
        WIDTH = (int) (dimension.getWidth() * 0.9);
        HEIGHT = (int) (dimension.getHeight() * 0.9);
        x = (int) ((dimension.getWidth() - WIDTH) / 2);
        y = (int) ((dimension.getHeight() - HEIGHT) / 2);
        DefaultTableModel modeltable1 = new DefaultTableModel();
        TableLexicoLL1.setModel(modeltable1);
        TableLexicoLL1.setVisible(false);
        TableLexicoLLNoterminales.setModel(modeltable1);
        TableLexicoLLNoterminales.setVisible(false);
        TableLexicoLLterminales.setModel(modeltable1);
        TableLexicoLLterminales.setVisible(false);
        TableProbadorLexicoLL1.setModel(modeltable1);
        TableProbadorLexicoLL1.setVisible(false);
        TableRegistroLL1.setModel(modeltable1);
        TableRegistroLL1.setVisible(false);
        ComboBoxProbadorLexicoMemoria.enable(true);
        TextAreaAsigmaLL1.setText("");
        TextAreaGramaticaLL1.setText("");
        FrameProbadorLR0.setBounds(x, y, WIDTH, HEIGHT);
        FrameProbadorLR0.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_AnalizadorLR0MousePressed

    private void ButtonProbarLexicoEnLL1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonProbarLexicoEnLL1MousePressed
        // TODO add your handling code here:
        String sigma = TextAreaAsigmaLL1.getText();
    }//GEN-LAST:event_ButtonProbarLexicoEnLL1MousePressed

    private void ButtonAnalizarCadenaLL2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAnalizarCadenaLL2MousePressed
        // TODO add your handling code here:
        String sigma = TextAreaAsigmaLL1.getText();
        resultll1.analizarCadena(sigma);
        
        ArrayList<Triplet<ArrayList<String>, String, String>> registro = resultll1.getRegistroLL1();
        
        Object[][] data;
        Object[] columnNames = {"Pila","Cadena","Accion"};

        int l = registro.size();
        int columnl = columnNames.length;
        data = new Object[l][columnl];
        for (int i = 0; i < l; i++) {
            Triplet<ArrayList<String>, String, String> aux = registro.get(i);
            data[i][0] = aux.getValue0().toString();
            data[i][1] = aux.getValue1();
            data[i][2] = aux.getValue2();
        }
        //        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        TableRegistroLL1.setModel(modeltable);
        TableRegistroLL1.setVisible(true);
    }//GEN-LAST:event_ButtonAnalizarCadenaLL2MousePressed

    private void ButtonLL1AsignarTokensMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonLL1AsignarTokensMousePressed
        // TODO add your handling code here:
        ArrayList<SimboloGramatica> noterminales = new ArrayList<>(gramaticall1.getSimbolosNoTerminales());
        ArrayList<SimboloGramatica> terminales = new ArrayList<>(gramaticall1.getSimbolosTerminales());
        
        resultll1 = null;
        resultll1 = new LL1(gramaticall1);
        resultll1.generarTablaLL1();
        Table<String, String, CeldaTabla> tablaLL1 = resultll1.getTablaLL1();
        
        Object[][] data3;
        Object[] columnNames3 = new Object[terminales.size() + 1];
        columnNames3[0] = "Simbolo terminal/No terminal";
        for (int i = 0; i < terminales.size(); i++) {
            columnNames3[i+1] = terminales.get(i).getSimbolo();
        }

        int l3 = noterminales.size();
        int columnl3 = columnNames3.length;
        data3 = new Object[l3][columnl3];
        columnl3--;
        for (int i = 0; i < l3; i++) {
            data3[i][0] = noterminales.get(i).getSimbolo();
            for (int j = 0; j < columnl3; j++) {
                data3[i][j+1] = tablaLL1.get(noterminales.get(i).getSimbolo(), terminales.get(j).getSimbolo()) != null ? tablaLL1.get(noterminales.get(i).getSimbolo(), terminales.get(j).getSimbolo()).getIndiceRegla() : -1;
            }
        }
        //        final Class[] columnClass = new Class[]{String.class, Integer.class, Boolean.class};
        DefaultTableModel modeltable3 = new DefaultTableModel(data3, columnNames3) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        TableProbadorLexicoLL1.setModel(modeltable3);
        TableProbadorLexicoLL1.setVisible(true);
        
        resultll1.imprimirTablaLL1();
        
    }//GEN-LAST:event_ButtonLL1AsignarTokensMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AnalizadorLR0;
    private javax.swing.JButton ButtonAnalizarCadenaLL2;
    private javax.swing.JButton ButtonCerraduraKleenAFN;
    private javax.swing.JButton ButtonCerraduraTransitivaAFN;
    private javax.swing.JButton ButtonConcatenarAFN;
    private javax.swing.JButton ButtonConvertirAFNaAFD;
    private javax.swing.JButton ButtonConvertirAFNaAFDSalir;
    private javax.swing.JButton ButtonCrearAFN;
    private javax.swing.JButton ButtonCrearERAFN;
    private javax.swing.JButton ButtonCrearTablaLL2;
    private javax.swing.JButton ButtonCrearTablaLL3;
    private javax.swing.JButton ButtonCrearTablaLL4;
    private javax.swing.JButton ButtonGuardarTablaArchivo;
    private javax.swing.JButton ButtonLL1AsignarTokens;
    private javax.swing.JButton ButtonOpcional;
    private javax.swing.JButton ButtonProbadorLexicoAbrirArchivo;
    private javax.swing.JButton ButtonProbadorLexicoAbrirArchivo1;
    private javax.swing.JButton ButtonProbadorLexicoAnalizar;
    private javax.swing.JButton ButtonProbadorLexicoAnalizar1;
    private javax.swing.JButton ButtonProbadorLexicoSalir;
    private javax.swing.JButton ButtonProbadorLexicoSalir1;
    private javax.swing.JButton ButtonProbadorLexicoSelecionar;
    private javax.swing.JButton ButtonProbadorLexicoSelecionar1;
    private javax.swing.JButton ButtonProbarLexicoEnLL1;
    private javax.swing.JButton ButtonProbarLexicoEnLL2;
    private javax.swing.JButton ButtonUnionEspecial;
    private javax.swing.JButton ButtonUnirAFN;
    private javax.swing.JComboBox<String> ComboBoxAFNaAFD;
    private javax.swing.JComboBox<String> ComboBoxCerraduraKleen;
    private javax.swing.JComboBox<String> ComboBoxCerraduraTransitiva;
    private javax.swing.JComboBox<String> ComboBoxConcatenar1;
    private javax.swing.JComboBox<String> ComboBoxConcatenar2;
    private javax.swing.JComboBox<String> ComboBoxERAFN;
    private javax.swing.JComboBox<String> ComboBoxOpcional;
    private javax.swing.JComboBox<String> ComboBoxProbadorLL1Memoria;
    private javax.swing.JComboBox<String> ComboBoxProbadorLL1Memoria1;
    private javax.swing.JComboBox<String> ComboBoxProbadorLexicoMemoria;
    private javax.swing.JComboBox<String> ComboBoxProbadorLexicoMemoria1;
    private javax.swing.JComboBox<String> ComboBoxUnion1;
    private javax.swing.JComboBox<String> ComboBoxUnion2;
    private javax.swing.JFileChooser FileChooserOpenTable;
    private javax.swing.JFileChooser FileChooserSaveTable;
    private javax.swing.JFrame FrameAFNBasico;
    private javax.swing.JFrame FrameAFNCerraduraKleen;
    private javax.swing.JFrame FrameAFNCerraduraTransitiva;
    private javax.swing.JFrame FrameAFNConcatenar;
    private javax.swing.JFrame FrameAFNOpcional;
    private javax.swing.JFrame FrameAFNUnion;
    private javax.swing.JFrame FrameAFNUnionLexico;
    private javax.swing.JFrame FrameConvertirAFNaAFD;
    private javax.swing.JFrame FrameEFAFN;
    private javax.swing.JFrame FrameEvaluadorExpresiones;
    private javax.swing.JFrame FrameOpenTable;
    private javax.swing.JFrame FrameProbadorLL1;
    private javax.swing.JFrame FrameProbadorLR0;
    private javax.swing.JFrame FrameProbadorLexico;
    private javax.swing.JFrame FrameSaveTable;
    private javax.swing.JMenu MenuAFN;
    private javax.swing.JMenuItem MenuAFNBasico;
    private javax.swing.JMenuItem MenuAFNaAFD;
    private javax.swing.JMenuItem MenuAnalisisLL1;
    private javax.swing.JMenuItem MenuAnalizarCadena;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem MenuCerraduraKleen;
    private javax.swing.JMenuItem MenuCerraduraTransitivaAFN;
    private javax.swing.JMenuItem MenuConcatenarAFN;
    private javax.swing.JMenuItem MenuDescRecGramaticaGramatica;
    private javax.swing.JMenuItem MenuERaAFN;
    private javax.swing.JMenuItem MenuItemCalculadora;
    private javax.swing.JMenuItem MenuOperacionOptional;
    private javax.swing.JMenuItem MenuProbadorAnalizadorLexico;
    private javax.swing.JMenu MenuSintactico;
    private javax.swing.JMenuItem MenuUnionLexico;
    private javax.swing.JMenuItem MenuUnirAFNS;
    private javax.swing.JPanel PanelAFNBasico;
    private javax.swing.JPanel PanelAFNCerraduraKleen;
    private javax.swing.JPanel PanelAFNCerraduraTransitiva;
    private javax.swing.JPanel PanelAFNConcatenar;
    private javax.swing.JPanel PanelAFNOpcional;
    private javax.swing.JPanel PanelAFNUnion;
    private javax.swing.JPanel PanelAFNUnionLexico;
    private javax.swing.JPanel PanelConvertirAFNaAFD;
    private javax.swing.JPanel PanelERAFN;
    private javax.swing.JPanel PanelOpenTable;
    private javax.swing.JPanel PanelProbadorLL1;
    private javax.swing.JPanel PanelProbadorLR0;
    private javax.swing.JPanel PanelProbadorLexico;
    private javax.swing.JPanel PanelProbadorLexico1;
    private javax.swing.JPanel PanelSaveTable;
    private javax.swing.JScrollPane ScrollPaneConvertirAFNaAFD;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoLL1;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoLL2;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoTabla;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoText;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoText1;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoText2;
    private javax.swing.JScrollPane ScrollPaneProbadorLexicoText3;
    private javax.swing.JScrollPane ScrollPaneRegistroLL1;
    private javax.swing.JScrollPane ScrollPaneRegistroLL2;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLL1;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLL2;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLLNoterminales;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLLNoterminales1;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLLterminales;
    private javax.swing.JScrollPane ScrollPaneTableLexicoLLterminales1;
    private javax.swing.JScrollPane ScrollPaneUnionLexico;
    private javax.swing.JTable TableConvertirAFNaAFD;
    private javax.swing.JTable TableLexicoLL1;
    private javax.swing.JTable TableLexicoLL2;
    private javax.swing.JTable TableLexicoLLNoterminales;
    private javax.swing.JTable TableLexicoLLNoterminales1;
    private javax.swing.JTable TableLexicoLLterminales;
    private javax.swing.JTable TableLexicoLLterminales1;
    private javax.swing.JTable TableProbadorLexico;
    private javax.swing.JTable TableProbadorLexicoLL1;
    private javax.swing.JTable TableProbadorLexicoLL2;
    private javax.swing.JTable TableRegistroLL1;
    private javax.swing.JTable TableRegistroLL2;
    private javax.swing.JTable TableUnionLexico;
    private javax.swing.JTextArea TextAreaAsigmaLL1;
    private javax.swing.JTextArea TextAreaAsigmaLL2;
    private javax.swing.JTextArea TextAreaErAFN;
    private javax.swing.JTextArea TextAreaGramaticaLL1;
    private javax.swing.JTextArea TextAreaGramaticaLL2;
    private javax.swing.JTextArea TextAreaProbadorLexico;
    private javax.swing.JTextArea TextAreaProbadorLexico1;
    private javax.swing.JTextArea TextAreaProbadorLexico2;
    private javax.swing.JTextArea TextAreaProbadorLexico3;
    private javax.swing.JTextField TextCaracterInferior;
    private javax.swing.JTextField TextCaracterSuperior;
    private javax.swing.JTextField TextIDAFN;
    private javax.swing.JTextField TextIdAFNUnionLexico;
    private javax.swing.JTextField TextIdAFNaAFD;
    private javax.swing.JTextField TextIdERAFN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenuDescensoRecursivo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
